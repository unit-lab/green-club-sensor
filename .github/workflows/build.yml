name: build

on: [push, pull_request]


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: GreenClub_Sensor

      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1.1.1

      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: '2.7'

      - name: Install requirements
        run: |
          pip install pyserial
          echo ${{github.ref}}
      - name: Install platform
        run: |
          arduino-cli core update-index --additional-urls https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
          arduino-cli core install esp32:esp32@2.0.4 --additional-urls https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
      - name: Install libraries
        run: |
          arduino-cli lib install "WiFiManager"
          arduino-cli lib install "ArduinoJson"
          arduino-cli lib install "Adafruit BME280 Library"

      - name: Set version env
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Insert version in firmware
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          sed -i 's/define VERSION.*/define VERSION "${{ env.RELEASE_VERSION }}"/' GreenClub_Sensor/GreenClub_Sensor.ino
          cat GreenClub_Sensor/GreenClub_Sensor.ino
   
      - name: Compile
        run: |
          mkdir build
          echo "Compiling ${{github.repository}}..."
          arduino-cli compile -v -b esp32:esp32:esp32 --build-properties build.partitions=minimal,upload.maximum_size=1966080 --output-dir build GreenClub_Sensor
          cp /home/runner/.arduino15/packages/esp32/hardware/esp32/2.0.4/tools/partitions/boot_app0.bin build/boot_app0.bin
          ls build

      - name: Checkout esp_binary_merger
        uses: actions/checkout@v2
        with:
          repository: vtunr/esp32_binary_merger
          path: esp32_binary_merger

      - name: Merge binaries
        run: |
          python esp32_binary_merger/merge_bin_esp.py \
            --output_name app-combined.bin \
            --bin_path build/GreenClub_Sensor.ino.bootloader.bin build/GreenClub_Sensor.ino.partitions.bin build/boot_app0.bin build/GreenClub_Sensor.ino.bin \
            --bin_address 0x1000 0x8000 0xe000 0x10000
          mv output/app-combined.bin build/app-combined.bin
          mv build/GreenClub_Sensor.ino.bin build/app.bin
          mv build/GreenClub_Sensor.ino.partitions.bin build/partitions.bin
          mv build/GreenClub_Sensor.ino.bootloader.bin build/bootloader.bin

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Green Club Sensor ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Upload app-combined.bin to Release
        id: upload-release-asset-1
        uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app-combined.bin
          asset_name: app-combined.bin
          asset_content_type: application/octet-stream

      - name: Upload app.bin to Release
        id: upload-release-asset-2
        uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app.bin
          asset_name: app.bin
          asset_content_type: application/octet-stream
      
      - name: Upload bootloader to Release
        id: upload-release-asset-3
        uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/bootloader.bin
          asset_name: bootloader.bin
          asset_content_type: application/octet-stream

      - name: Upload partitions to Release
        id: upload-release-asset-4
        uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/partitions.bin
          asset_name: partitions.bin
          asset_content_type: application/octet-stream

      - name: Upload boot_app0 to Release
        id: upload-release-asset-5
        uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/boot_app0.bin
          asset_name: boot_app0.bin
          asset_content_type: application/octet-stream